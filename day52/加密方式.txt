    function a(a=16) {  #随机的16位字符串
        var d, e, b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", c = "";
        for (d = 0; a > d; d += 1)  #循环16次，
            e = Math.random() * b.length,# 随机数#b.length
            e = Math.floor(e),  #取整
            c += b.charAt(e);  #取字符串的xxx位置
        return c
    }
    function b(a, b) {  #a是要加密的内容
        var c = CryptoJS.enc.Utf8.parse(b)加密的密钥
          , d = CryptoJS.enc.Utf8.parse("0102030405060708")
          , e = CryptoJS.enc.Utf8.parse(a)
          , f = CryptoJS.AES.encrypt(e, c, {   #   c   加密的密钥
            iv: d,#偏移量
            mode: CryptoJS.mode.CBC #模式是cbc
        });
        return f.toString()
    }
    function c(a, b, c) {
        var d, e;
        return setMaxDigits(131),
        d = new RSAKeyPair(b,"",c),
        e = encryptedString(d, a)
    }
    function d(d, e, f, g) {    d 就是数据  e  01001    f 很长    g   '0CoJUm6Qyw8W8jud'
        var h = {}  # 空对象
          , i = a(16);   #16位随机值  把i设置成定值
        h.encText = b(d, g),
        h.encText = b(h.encText, i),  #返回的就是params
        h.encSecKey = c(i, e, f),  #得到的就是encSecKey   e,f定值   i 变量  如果i固定
        return


       #两次加密
       #数据+g=>b=>第一次加密+i=>b=>params
    }
    function e(a, b, d, e) {
        var f = {};
        return f.encText = c(a + e, b, d),
        f
    }



f=''00e0b509f6259df8642dbc3566290147
    7df22677ec152b5ff68ace615bb7b725152b
    3ab17a876aea8a5aa76d2e417629ec4ee341
    f56135fccf695280104e0312ecbda92557c9
    3870114af6c9d05c4f7f0c3685b7a46bee25
    5932575cce10b424d813cfe4875d3e82047b
    97ddef52741d546b8e289dc6935b3ece0462
    db0a22b8e7''












